package br.com.si.CrudApp.model;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.springframework.hateoas.RepresentationModel;

import javax.persistence.*;
import java.util.Date;

@Entity
@Table(name = "people")
@AllArgsConstructor
@NoArgsConstructor
@ApiModel(value = "Person Model V2")
public class PersonModelV2 extends RepresentationModel {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Setter @Getter
    @ApiModelProperty(notes = "The ID, auto generated by database", required = true)
    private long id;

    @Column(name = "full_name", nullable = false, length = 50)
    @Setter @Getter
    @ApiModelProperty(notes = "The full name", required = true)
    private String fullName;

    @Column(nullable = false, length = 50)
    @Setter @Getter
    @ApiModelProperty(notes = "A valid email", required = true)
    private String email;

    @Column(nullable = false, length = 1)
    @Setter @Getter
    @ApiModelProperty(notes = "The gender, generally M or F.", required = true)
    private String gender;

    //..new columns - V2 ---------------------------------
    @Column(name = "birth_date", nullable = true)
    @Getter @Setter
    @ApiModelProperty(notes = "The birth date", required = true)
    private Date birthDate;

    @Column(nullable = true, length = 50)
    @Getter @Setter
    @ApiModelProperty(notes = "The City tha the person lives", required = true)
    private String city;

    //..many people are associated with a profession
    @ManyToOne
    @JoinColumn(name = "profession_id")
    @Getter @Setter
    private ProfessionModel profession;

}
